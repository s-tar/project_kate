// Generated by CoffeeScript 1.6.3
(function() {
  var User, root, user;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  User = (function() {
    var processing, sendUserData;

    function User() {}

    processing = false;

    sendUserData = function(sn, data, cb) {
      return $.ajax({
        type: "POST",
        url: root.base_url + "/user/login/" + sn,
        data: {
          data: JSON.stringify(data)
        },
        success: function(data) {
          if (data.status === 'ok') {
            processing = false;
            return cb != null ? typeof cb.success === "function" ? cb.success() : void 0 : void 0;
          }
        }
      });
    };

    User.prototype.login = {
      fb: function(cb) {
        processing = !processing ? true : false;
        return FB.getLoginStatus(function(response) {
          if (response.status === 'connected') {
            return sendUserData('fb', response, cb);
          } else {
            return FB.login(function(response) {
              if (response.authResponse) {
                return sendUserData('fb', response, cb);
              } else {
                processing = false;
                if (typeof cb.fail === 'function') {
                  if (cb != null) {
                    if (typeof cb.fail === "function") {
                      cb.fail();
                    }
                  }
                }
                return console.log('User cancelled login or did not fully authorize.');
              }
            }, {
              scope: 'email,user_likes'
            });
          }
        });
      },
      vk: function(cb) {
        processing = !processing ? true : false;
        return VK.Auth.getLoginStatus(function(response) {
          response.session = '';
          if (response.session) {
            return sendUserData('vk', response.session, cb);
          } else {
            return VK.Auth.login(function(response) {
              if (response.session) {
                return sendUserData('vk', response.session, cb);
              } else {
                processing = false;
                if (typeof cb.fail === 'function') {
                  if (cb != null) {
                    if (typeof cb.fail === "function") {
                      cb.fail();
                    }
                  }
                }
                return console.log('User cancelled login or did not fully authorize.');
              }
            });
          }
        });
      },
      "native": function(data) {
        console.log(data);
        if (data) {
          return $.ajax({
            type: "POST",
            url: root.base_url + "/user/login/native",
            data: {
              email: data.email,
              password: data.password
            },
            dataType: 'json',
            success: function(data) {
              return window.location.reload();
            }
          });
        }
      }
    };

    User.prototype.logout = function() {
      return $.ajax({
        type: "POST",
        url: root.base_url + "/user/logout",
        data: {},
        dataType: 'json',
        success: function(data) {
          return window.location.reload();
        }
      });
    };

    return User;

  })();

  user = new User();

  window.user = user;

  $(document).on('click', '.user-registration', function(e) {
    var self;
    e.preventDefault();
    self = $(this);
    return widget.get('user.registration.form', {}, function(html) {
      return root.popup.show({
        title: 'Регистрация',
        content: html,
        caller: self
      });
    });
  });

  $(document).on('click', '.user-login-native', function(e) {
    var self;
    e.preventDefault();
    self = $(this);
    return widget.get('user.login.form', {}, function(html) {
      return root.popup.show({
        title: 'Авторизация',
        content: html,
        caller: self
      });
    });
  });

  $(document).on('click', '.user-login-fb', function() {
    var self;
    self = $(this);
    self.addClass('busy');
    return user.login.fb({
      success: function() {
        return window.location.reload();
      },
      fail: function() {
        return self.removeClass('busy');
      }
    });
  });

  $(document).on('click', '.user-login-vk', function() {
    var self;
    self = $(this);
    self.addClass('busy');
    return user.login.vk({
      success: function() {
        return window.location.reload();
      },
      fail: function() {
        return self.removeClass('busy');
      }
    });
  });

  $(document).on('click', '.user-logout', function() {
    return user.logout();
  });

}).call(this);
